#!/usr/bin/python
# -*- coding: UTF-8 -*-#
#
# Author: Abelardo Pardo (abelardo.pardo@uc3m.es)
#
import os, sys, locale, codecs

# Fix the output encoding when redirecting stdout
if sys.stdout.encoding is None:
    (lang, enc) = locale.getdefaultlocale()
    if enc is not None:
        (e, d, sr, sw) = codecs.lookup(enc)
        # sw will encode Unicode data to the locale-specific character set.
        sys.stdout = sw(sys.stdout)

# Import the Adagio package
_dirName = os.path.dirname(__file__)
_dirName = os.path.abspath(os.path.join(_dirName, '..'))
sys.path.insert(0, _dirName)
sys.path.insert(0, os.path.join(_dirName, 'pla'))

import pla

dataDir = os.path.join(pla.plaDirectory, 'tools', 'kdevelop')
dataFile = os.path.join(dataDir, 'kdevelop')

def main(): 
    """
    Application to wrap the execution of the kdevelop IDE. Execute it normally
    and record its invocation.
    """
    
    global dataDir
    global dataFile

    pla.logMessage("kdevelop: plaDirectory = " + pla.plaDirectory)
    pla.logMessage("kdevelop: DataFile = " + dataFile)

    # Modify the first argument to point to the true executable
    sys.argv[0] = '/usr/bin/kdevelop'

    sys.exit(pla.executeAndLogExecution(dataDir, dataFile, 'kdevelop'))

if __name__ == "__main__":
    main()
